/*
It's the server I create for MyGobang
*/
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;

public class GobangServer implements Runnable {

	/**
	 * 在指定端口上启动一个服务器
	 * 
	 * @param port
	 *            :服务器所以的端口
	 */
	Socket client;
	ServerSocket server;
	OutputStream out;
	InputStream in;
	PrintStream ps;
	BufferedReader br;

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		GobangServer cs = new GobangServer();
		Thread t1 = new Thread(cs);
		t1.start();
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		try {
			// 建立绑定在指定端口上的服务器对象
			server = new ServerSocket(7777);
			System.out.println("服务器创建成功！" + 7777);
			// 让服务器进入等待状态:阻塞状态
			while (true) {
				System.out.println("等待连接中。。。");
				client = server.accept();
				// 从连接对象上得到输入输出流对象q
				out = client.getOutputStream();
				in = client.getInputStream();
				// String s = "你好,欢迎来javaKe.com\r\n";
				// byte[] data = s.getBytes();// 取得组成这个字符串的字节
				ps = new PrintStream(out);
				br = new BufferedReader(new InputStreamReader(in));
				String strIn = br.readLine();
				System.out.println(strIn);
				ps.print(strIn); // 用输出对象发送数据！
				ps.flush();// 强制输出

			}
		} catch (Exception ef) {
			ef.printStackTrace();
		} finally {
			try {
				client.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}// 半闭与客户机的连接
		}
	}

}
